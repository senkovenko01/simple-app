name: CI-CD-Pipeline
env:
  S3_BUCKET_NAME: "github-actions-app"
  EB_APPLICATION_NAME: "GithubActions"
  EB_ENVIRONMENT_NAME: "Githubactions-env-1"
  DEPLOY_PACKAGE_NAME: "github-actions-${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-west-2"

on: [workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  CI-part:

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set env to dev
        if: endsWith(github.ref, '/dev')
        run: |
          echo "application_name=dev-nodejs-app" >> $GITHUB_ENV
          echo "environment_name=Devnodejsapp-env" >> $GITHUB_ENV
          echo "NODE_ENV=development" >> $GITHUB_ENV

      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: |
          echo "application_name=nodejs-app" >> $GITHUB_ENV
          echo "environment_name=Nodejsapp-env" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16

      - name: Cache node_modules ðŸ“¦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Installing NPM
        run: npm install

      # - name: Linting check
      #   run: npm run lint

      - name: Building application
        run: npm build

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS Credentials
        uses: fuller-inc/actions-aws-assume-role@v1
        with:
          role-to-assume: arn:aws:iam::242660385949:role/role-for-github-actions
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Upload ZIP package to S3 Bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.S3_BUCKET_NAME }}/

  CD-part:

    runs-on: ubuntu-latest
    needs: [CI-part]

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: fuller-inc/actions-aws-assume-role@v1
        with:
          role-to-assume: arn:aws:iam::242660385949:role/role-for-github-actions
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "version-${{ github.sha }}"

      - name: Deploy ElasticBeanstalk Application!
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "version-${{ github.sha }}"
